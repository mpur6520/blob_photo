import simplegui
import random
import time

# Global variables
WIDTH = 500
HEIGHT = 500
player_radius = 50
player_pos = [WIDTH / 2, HEIGHT / 2 + 100]
player_speed = 20
trash_counter = 0
mastery_levels = ["Dumpster Diner", "Scrap Savant", "Garbage Gourmet", "Junkyard Junkie", "Trash Titan", "Waste Warrior", "Debris Devotee", "Recycling Royalty", "Filth Fiend", "Rummage Ruler", "Litter Legend"]
mastery_index = 0

intro_text = "This grassy patch has become very polluted."
intro_text_2 = "Some bacterium can get rid of trash!" 
intro_text_3 = "You are now one of them. Use WASD to move."
intro_text_4 = "Press [Z] to eat trash once you're over it."
intro_text_5 = "You have 1 minute to clean it up!"
intro_text_6 = "Trash is bad for our environment."
intro_text_7 = "Don't litter!    [Press [X] to Start Game]"

instructions = True 

timer_value = 60


# trash circles - trash
trash_circles = [[100, 400], [200, 300], [300, 450], [150, 350], [450, 300]]
trash_circle_radius = 50

background_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/background_high_res.jpg")
player_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/blob_big.png")
water_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/bottle_big.png")
plastic_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/plastic_big.png")
banana_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/banana_big.png")
coffee_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/coffee_big.png")
glass_image = simplegui.load_image("https://mpur6520.github.io/game_photos_G4C/glass_big.png")

trash_images = [water_image, plastic_image, banana_image, coffee_image, glass_image]
trash_image_index = random.randint(0, len(trash_images)-1)

collect_sound = simplegui.load_sound("https://mpur6520.github.io/game_photos_G4C/sound.mp3")
background_music = simplegui.load_sound("https://mpur6520.github.io/game_photos_G4C/WAAAAAA.mp3") #why is it so aggressive (I'm not changing it fr)

# Text messages
message = ""
message_box = None
message_width = 0

# Helper function to check if two circles are touching ( i hate math !!! BOOOOO MAAATHHH BOOOO)
def circles_touching(circle1_pos, circle1_radius, circle2_pos, circle2_radius):
    distance_between_centers = ((circle1_pos[0] - circle2_pos[0]) ** 2 + (circle1_pos[1] - circle2_pos[1]) ** 2) ** 0.5
    return distance_between_centers <= circle1_radius + circle2_radius

# Function to calculate the trash counter
def calculate_trash_counter():
    return len(trash_circles)

        
def update_timer():
    global timer_value
    if timer_value > 0:
        timer_value -= 1
        
def format(t):
    minutes = t // 60
    seconds = t % 60
    return "{:02}:{:02}".format(minutes, seconds)
    
    
# Handler to draw everything on the canvas
def draw(canvas):
    global message, message_box, message_width, mastery_index, trash_image_index, instructions, time
    
    # Draw background rectangle
    canvas.draw_image(background_image, ((3000 / 2, 3000 / 2)), (3000, 3000), (WIDTH / 2, HEIGHT / 2), (WIDTH, HEIGHT))
    
    # Draw box behind them boooo
    canvas.draw_polygon([(5, 10), (5, 60), (495, 60), (495, 10)], 3, "White", "Black")
    
    # Draw score counter
    score_text = "Trash Eaten: " + str(trash_counter)
    canvas.draw_text(score_text, (15, 42), 23, "White", "monospace")
   

    # Draw timer
    canvas.draw_text("Time Left: " + format(timer_value), (WIDTH - 200 - frame.get_canvas_textwidth(str(timer_value), 20), 42), 23, "White", "monospace")
    
    # Draw trash circles
    for circle in trash_circles:
        trash_image = trash_images[trash_image_index]
        canvas.draw_image(trash_image, (trash_image.get_width() / 2, trash_image.get_height() / 2), (trash_image.get_width(), trash_image.get_height()), circle, (trash_circle_radius * 1.5, trash_circle_radius + 10))
            
        
        # Check for overlapping with player circle
        if circles_touching(player_pos, player_radius, circle, trash_circle_radius):
            message = "Press [Z] to eat the trash!"
            message_width = frame.get_canvas_textwidth(message, 24)
            message_box = [WIDTH / 2 - message_width / 2 - 5, HEIGHT / 2 - 15, message_width + 10, 30]
            break
        else:
            message = ""
            message_box = None

    # Draw player 
    canvas.draw_image(player_image, ( 3766 / 2, 3000 / 2), (3766, 3000), player_pos, (player_radius * 1.5, player_radius + 10))
            
    # Draw message box if there's a message
    if message_box:
        canvas.draw_polygon([(WIDTH - 50, HEIGHT - 390), (50, HEIGHT - 390), (50, HEIGHT - 425), (WIDTH - 50, HEIGHT - 425)], 3, "White", "Black")
        
    # Draw text message
    canvas.draw_text(message, (WIDTH / 2 - message_width + 50, HEIGHT - 400), 24, "White", "monospace")
   
    # draw instructions screen
    if instructions == True:
        canvas.draw_polygon([(20,50),(480,50),(480,450),(20,450)], 3, "White", "Black")
        canvas.draw_text(intro_text, (40,130), 17, "White", "monospace")
        canvas.draw_text(intro_text_2, (40,170), 17, "White", "monospace")
        canvas.draw_text(intro_text_3, (40,210), 17, "White", "monospace")
        canvas.draw_text(intro_text_4, (40,250), 17, "White", "monospace")
        canvas.draw_text(intro_text_5, (40,290), 17, "White", "monospace")
        canvas.draw_text(intro_text_6, (40,330), 17, "White", "monospace")
        canvas.draw_text(intro_text_7, (40,370), 17, "White", "monospace")

# Handler for keydown events
def keydown_handler(key):
    global player_pos, trash_counter, mastery_index, player_radius, player_image, instructions, timer
    
    if key == simplegui.KEY_MAP["x"]:  
        if instructions:
            instructions = False
            timer.start()
        
    
    # Move player based on arrow keys
    if key == simplegui.KEY_MAP["w"]:
        player_pos[1] -= player_speed
        if player_pos[1] <= 300:
            player_pos[1] = 300
    elif key == simplegui.KEY_MAP["s"]:
        if player_pos[1] >= 500:
            player_pos[1] = 500
        player_pos[1] += player_speed
    elif key == simplegui.KEY_MAP["a"]:
        player_pos[0] -= player_speed
        if player_pos[0] <= 0:
            player_pos[0] = 0
    elif key == simplegui.KEY_MAP["d"]:
        player_pos[0] += player_speed
        if player_pos[0] >= 500:
            player_pos[0] = 500
            
            
    # Check for picking up trash when pressing Z
    if key == simplegui.KEY_MAP["z"]:
        collect_sound.play()
        for circle in trash_circles:
            if circles_touching(player_pos, player_radius, circle, trash_circle_radius):
                trash_circles.remove(circle)
                # Update trash counter
                trash_counter += 1
                # Update mastery level
                if trash_counter % 10 == 0 and mastery_index < len(mastery_levels) - 1:
                    if mastery_index <= 10:
                        mastery_index += 1
                        player_radius = player_radius + 3
                    else:
                        mastery_index = 10 
    
    # Respawn trash circles if all are eaten
    if len(trash_circles) == 0:
        spawn_new_circles()
        
        

        

# Function to spawn new trash circles
def spawn_new_circles():
    global trash_circles, trash_image, trash_image_index
    trash_image_index = random.randint(0,len(trash_images)-1)
    trash_circles = [[random.randint(0, WIDTH - 50), random.randint(HEIGHT - 200, HEIGHT)] for _ in range(5)]
    
    
    
# Create frame and register event handlers
frame = simplegui.create_frame("Trash Eating", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown_handler)

#timerrr
timer = simplegui.create_timer(1000, update_timer)

# everything is okay (music playing)
background_music.set_volume(0.2)
background_music.play()

# Start the frame
frame.start()
